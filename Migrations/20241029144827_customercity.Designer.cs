// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SongebobFanClub.Models;

#nullable disable

namespace SongebobFanClub.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20241029144827_customercity")]
    partial class customercity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SongebobFanClub.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<int>("CustomerCityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerCityId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerCityId = 1,
                            Name = "Patrick Star"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerCityId = 1,
                            Name = "Sandy Cheeks"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerCityId = 1,
                            Name = "Bubble Bass"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerCityId = 1,
                            Name = "Ms. Puff"
                        });
                });

            modelBuilder.Entity("SongebobFanClub.Models.CustomerCity", b =>
                {
                    b.Property<int>("CustomerCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerCityId"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerCityId");

                    b.ToTable("CustomerCity");

                    b.HasData(
                        new
                        {
                            CustomerCityId = 1,
                            City = "Bikini Bottom"
                        });
                });

            modelBuilder.Entity("SongebobFanClub.Models.Employees", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Spongebob",
                            LastName = "SquarePants",
                            Position = "FryCook",
                            Salary = "$1.45"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Squidward",
                            LastName = "Tentacles",
                            Position = "Cashier",
                            Salary = "$30,000"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Eugene",
                            LastName = "Krabs",
                            Position = "Boss",
                            Salary = "$2,000,000"
                        });
                });

            modelBuilder.Entity("SongebobFanClub.Models.Customer", b =>
                {
                    b.HasOne("SongebobFanClub.Models.CustomerCity", "City")
                        .WithMany("Customer")
                        .HasForeignKey("CustomerCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SongebobFanClub.Models.CustomerCity", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
